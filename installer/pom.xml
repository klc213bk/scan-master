<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.tgl.scan</groupId>
		<version>${scan-master.version}</version>
		<artifactId>master</artifactId>
	</parent>
	<artifactId>tgl-scan-installer</artifactId>
	<version>${scan-installer.revision}</version>
	<name>TGL-Scan Installer</name>

	<properties>
		<runtime.jre.location>${dist.location}/java</runtime.jre.location>
		<jre-x64.zipfile>OpenJDK11U-jre_x64_windows_hotspot_11.0.11_9.zip</jre-x64.zipfile>
		<jre-x64.download.link>https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/${jre-x64.zipfile}</jre-x64.download.link>
		<jre-x64.unpack.location>jdk-11.0.11+9-jre</jre-x64.unpack.location>
		<jre-x64.location>${runtime.jre.location}/x64</jre-x64.location>
		<!--
		未包含 OpenJFX，執行時會動態下載相關的DLL檔，但下載的卻是64位元的DLL，因而出現錯誤
		<jre-x86.zipfile>OpenJDK11U-jre_x86-32_windows_hotspot_11.0.11_9.zip</jre-x86.zipfile>
		<jre-x86.download.link>https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/${jre-x86.zipfile}</jre-x86.download.link>
		<jre-x86.unpack.location>jdk-11.0.11+9-jre</jre-x86.unpack.location>
		-->
		<!--
		Full JRE(包含 OpenJFX) - 
		<jre-x86.zipfile>zulu11.50.19-ca-fx-jre11.0.12-win_i686.zip</jre-x86.zipfile>
		<jre-x86.download.link>https://cdn.azul.com/zulu/bin/${jre-x86.zipfile}</jre-x86.download.link>
		<jre-x86.unpack.location>zulu11.50.19-ca-fx-jre11.0.12-win_i686</jre-x86.unpack.location>
		-->
		<!-- Full JRE(包含 OpenJFX) -->
		<jre-x86.zipfile>bellsoft-jre11.0.12+7-windows-i586-full.zip</jre-x86.zipfile>
		<jre-x86.download.link>https://download.bell-sw.com/java/11.0.12+7/${jre-x86.zipfile}</jre-x86.download.link>
		<jre-x86.unpack.location>jre-11.0.12-full</jre-x86.unpack.location>
		<jre-x86.location>${runtime.jre.location}/x86</jre-x86.location>

		<installer.location>${dist.location}/installer</installer.location>
		<iss.location>${target}/iss</iss.location>
		<iss-script.location>${target}/iss-script</iss-script.location>
	</properties>

	<build>
		<plugins>
			<!--
			Jenkins Build 版時無法連到外網下載檔案，故改為預先下載並儲存在本專案目錄中
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>${download-maven-plugin.version}</version>
				<executions>
					<execution>
                        <id>download-jre-x64</id>
                        <phase>package</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>${jre-x64.download.link}</url>
							<unpack>true</unpack>
							<skipCache>false</skipCache>
							<overwrite>true</overwrite>
							<retries>5</retries>
							<outputDirectory>${jre-x64.location}</outputDirectory>
						</configuration>
					</execution>
					<execution>
                        <id>download-jre-x86</id>
                        <phase>package</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>${jre-x86.download.link}</url>
							<unpack>true</unpack>
							<skipCache>false</skipCache>
							<overwrite>true</overwrite>
							<retries>5</retries>
							<outputDirectory>${jre-x86.location}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
			<!-- Jenkins Build 版時無法連到外網下載檔案，故改為讀取預先儲存的JRE壓縮檔 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>unzip-jre-x64</id>
						<phase>package</phase>
						<configuration>
							<target>
								<unzip src="src/main/deploy/jre-zip/x64/${jre-x64.zipfile}" dest="${jre-x64.location}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>unzip-jre-x86</id>
						<phase>package</phase>
						<configuration>
							<target>
								<unzip src="src/main/deploy/jre-zip/x86/${jre-x86.zipfile}" dest="${jre-x86.location}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>${copy-rename-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>rename-jre-x64</id>
						<phase>package</phase>
						<goals>
							<goal>rename</goal>
						</goals>
						<configuration>
							<sourceFile>${jre-x64.location}/${jre-x64.unpack.location}</sourceFile>
							<destinationFile>${jre-x64.location}/jre</destinationFile>
						</configuration>
					</execution>
					<execution>
						<id>rename-jre-x86</id>
						<phase>package</phase>
						<goals>
							<goal>rename</goal>
						</goals>
						<configuration>
							<sourceFile>${jre-x86.location}/${jre-x86.unpack.location}</sourceFile>
							<destinationFile>${jre-x86.location}/jre</destinationFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
                        <id>copy-inno-setup-script</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${iss-script.location}</outputDirectory>
							<resources>          
								<resource>
									<directory>src/main/deploy/iss-script</directory>
								</resource>
							</resources> 
						</configuration>
					</execution>
					<execution>
                        <id>copy-inno-setup-compiler</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${iss.location}</outputDirectory>
							<resources>          
								<resource>
									<directory>src/main/deploy/iss-6.1.2</directory>
								</resource>
							</resources> 
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>${maven-replacer-plugin.version}</version>
				<executions>
					<execution>
						<id>replace-installer-x64</id>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>${iss-script.location}/installer-x64.iss</file>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>%OPT1%</token>
									<value>${build.installer.app.id}</value>
								</replacement>
								<replacement>
									<token>%OPT2%</token>
									<value>${build.app.name}</value>
								</replacement>
								<replacement>
									<token>%OPT3%</token>
									<value>${build.app.name}安裝程式(x64)</value>
								</replacement>
								<replacement>
									<token>%OPT4%</token>
									<value>解除安裝 [${build.app.name}]</value>
								</replacement>
								<replacement>
									<token>%OPT5%</token>
									<value>${scan-main.version}</value>
								</replacement>
								<replacement>
									<token>%OPT6%</token>
									<value>${build.scheme.id}</value>
								</replacement>
								<replacement>
									<token>%OPT7%</token>
									<value>${build.install.dir}</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>replace-installer-x86</id>
						<phase>package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>${iss-script.location}/installer-x86.iss</file>
							<regex>false</regex>
							<replacements>
								<replacement>
									<token>%OPT1%</token>
									<value>${build.installer.app.id}</value>
								</replacement>
								<replacement>
									<token>%OPT2%</token>
									<value>${build.app.name}</value>
								</replacement>
								<replacement>
									<token>%OPT3%</token>
									<value>${build.app.name}安裝程式(x86)</value>
								</replacement>
								<replacement>
									<token>%OPT4%</token>
									<value>解除安裝 [${build.app.name}]</value>
								</replacement>
								<replacement>
									<token>%OPT5%</token>
									<value>${scan-main.version}</value>
								</replacement>
								<replacement>
									<token>%OPT6%</token>
									<value>${build.scheme.id}</value>
								</replacement>
								<replacement>
									<token>%OPT7%</token>
									<value>${build.install.dir}</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-installer-x64</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${iss.location}/ISCC.exe</executable>
							<workingDirectory>${target}</workingDirectory>
							<arguments>
								<argument>${iss-script.location}/installer-x64.iss</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>generate-installer-x86</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${iss.location}/ISCC.exe</executable>
							<workingDirectory>${target}</workingDirectory>
							<arguments>
								<argument>${iss-script.location}/installer-x86.iss</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>